<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-17T22:25:18Z" name="Surefire suite" finished-at="2021-07-17T22:25:23Z" duration-ms="5037">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-07-17T22:25:18Z" name="Surefire test" finished-at="2021-07-17T22:25:23Z" duration-ms="5037">
      <class name="test.java.runner.RunnerIT">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:18Z" name="setUpClass" finished-at="2021-07-17T22:25:18Z" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:18Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-17T22:25:21Z" duration-ms="3228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify the value of 'first_name' for 'id' as '10'"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:21Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-07-17T22:25:23Z" duration-ms="1410" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Verify if the 'id' gets generated after Submitting a POST Request"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["User"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Schema to use cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Schema to use cannot be null
at io.restassured.module.jsv.JsonSchemaValidator.validateSchemaIsNotNull(JsonSchemaValidator.java:270)
at io.restassured.module.jsv.JsonSchemaValidator.access$300(JsonSchemaValidator.java:75)
at io.restassured.module.jsv.JsonSchemaValidator$JsonSchemaValidatorFactory.create(JsonSchemaValidator.java:281)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchema(JsonSchemaValidator.java:166)
at io.restassured.module.jsv.JsonSchemaValidator.matchesJsonSchemaInClasspath(JsonSchemaValidator.java:117)
at main.java.coreComponents.Common.AssertUtil.validateJsonSchema(AssertUtil.java:20)
at test.java.stepDefinitions.userStepdefs.validateTheJsonSchemaOfAPIResponse(userStepdefs.java:86)
at âœ½.Validate the json schema of "l.json" API response(file:src/test/java/feature/users.feature:17)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="writeExtent()[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:23Z" name="writeExtent" finished-at="2021-07-17T22:25:23Z" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeExtent -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:23Z" name="tearDownClass" finished-at="2021-07-17T22:25:23Z" duration-ms="58" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.java.runner.RunnerIT@3e6ef8ad]" started-at="2021-07-17T22:25:23Z" name="tearDown" finished-at="2021-07-17T22:25:23Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- test.java.runner.RunnerIT -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
